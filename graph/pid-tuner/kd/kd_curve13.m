data = {
[13 13 16 28 43 49 52 55 57 56 55 52 49 50 51 53 55 57 59 60 -5 -5 32 35 48 54 49 49 55 56 56 53 54 49 48 49 -2 -9 3 -3 -6 -7 -9 -10 -9 -9 -2 11 26 23 13 -2 -8 -8 -6 7 30 28 13 -5 -7 -8 -7 2 21 25 19 9 -6 -8 -8 -4 11 25 22 12 0 -7 -7 -5 7 22 23 18 10 -2 -7 -7 -5 7 25 27 19 1 -8 -9 -9 -4 14 27 21 14 1 -7 -8 -6 3 19 25 20 13 3 -5 -6 -4 6 21 26 19 10 -4 -8 -8 -4 8 24 25 18 2 -8 -8 -7 0 15 25 20 11 -3 -8 -8 -7 6 26 24 11 -4 -8 -8 -7 3]
[-7 -7 -7 -3 6 14 12 5 0 -1 -2 0 5 13 15 10 4 1 1 1 3 7 13 13 7 3 4 5 4 4 6 9 10 9 8 8 5 1 1 1 3 6 9 13 12 10 6 2 -1 -1 0 6 14 17 14 8 2 -3 -4 -3 3 14 20 17 11 3 -5 -6 -5 1 14 22 18 12 5 -4 -6 -6 1 13 22 20 14 8 -1 -4 -3 1 11 20 19 12 6 -1 -4 -4 -1 10 20 19 14 7 -2 -5 -6 -1 11 22 20 14 3 -6 -7 -6 1 18 26 20 11 -5 -8 -8 -7 6 28 30 20 -2 -8 -8 -9 -8 3 27 36 24 -6 -9 -9 -9 -8 0 16 25 22 11 -3 -8 -9 -8 -2 15 22 19 8 -2]
[-7 -7 -7 -6 0 11 14 9 1 -2 -3 -1 3 11 13 10 5 2 1 0 0 3 7 10 11 10 4 0 -3 -2 1 9 15 12 6 1 -2 -2 -2 4 14 18 13 6 2 0 -1 0 6 13 16 12 9 7 4 1 1 2 6 12 16 14 11 6 -2 -5 -5 -1 10 21 22 15 6 -3 -7 -7 -4 10 22 22 17 10 -3 -8 -8 -5 5 22 25 21 12 -4 -8 -9 -8 -1 16 27 24 16 -2 -9 -9 -8 1 22 31 25 14 -5 -8 -9 -8 -2 18 31 28 18 -5 -8 -8 -8 -7 4 22 29 25 2 -8 -7 -8 -8 -4 7 19 22 14 3 -7 -9 -8 -5 7 20 19 11 1 -5 -6 -6 -2 7 15 14 8 1]
[1 1 0 0 2 4 5 5 4 3 2 3 5 6 7 6 5 3 3 4 7 10 11 8 3 -2 -3 -2 6 15 18 15 6 -1 -5 -7 -5 1 15 24 21 12 2 -6 -8 -8 -4 9 21 22 16 8 -2 -6 -7 -6 1 16 24 21 14 3 -7 -9 -8 -6 7 23 25 19 9 -1 -7 -8 -7 1 16 24 21 15 8 -1 -6 -7 -6 2 17 24 21 15 4 -7 -9 -8 -5 2 25 30 28 19 -7 -9 -9 -10 -8 1 17 29 28 19 -1 -9 -8 -9 -8 1 19 31 30 13 -8 -8 -8 -8 -8 -7 6 31 43 35 -4 -8 -6 -8 -9 -9 -9 -8 -1 18 31 28 13 -7 -9 -10 -10 -8 -2 10 16 17 12 4 -3]
[-9 -9 -10 -10 -8 0 10 19 24 18 8 -4 -9 -9 -9 -6 -2 25 35 34 22 -8 -8 -7 -7 -8 -8 -8 -8 -5 9 26 33 30 19 -7 -9 -9 -9 -9 -8 0 14 30 35 30 18 -8 -9 -9 -9 -9 -9 -6 5 21 31 29 22 -2 -9 -9 -9 -10 -8 1 18 29 31 27 11 -8 -9 -9 -10 -9 -5 8 22 30 31 25 -2 -9 -9 -9 -9 -8 1 22 33 36 30 3 -9 -9 -9 -9 -9 -4 9 25 35 32 19 -7 -8 -8 -8 -9 -9 -6 4 22 38 37 18 -7 -7 -6 -7 -8 -8 -8 -9 -8 -5 8 25 31 25 9 -9 -10 -10 -10 -10 -8 0 12 25 29 21 6 -8 -9 -9 -10 -9 -4 10 23 29 25]
[10 10 9 4 -5 -6 -7 -5 3 14 19 19 12 2 -5 -8 -8 -8 -4 7 23 28 23 9 -6 -8 -8 -8 -9 -7 1 15 29 34 26 3 -9 -9 -9 -9 -9 -9 -7 0 8 30 33 29 17 -8 -9 -9 -9 -9 -9 -7 3 18 33 36 30 14 -9 -9 -8 -9 -10 -9 -7 1 19 33 34 29 14 -9 -9 -9 -9 -10 -10 -8 1 19 34 36 33 18 -9 -9 -7 -8 -9 -9 -9 -8 3 28 43 44 33 -9 -7 11 11 4 6 8 10 10 12 16 22 30 44 65 67 68 71 65 62 65 64 61 60 60 62 62 56 52 52 53 49 44 49 49 49 54 55 51 9 -9 10 40 48 52 54 49 44 48 53 57]
[-6 -6 -6 -3 3 13 18 17 11 2 -5 -8 -9 -9 -6 3 19 30 34 28 6 -8 -8 -6 -8 -10 -10 -8 -8 -3 12 31 38 37 28 -8 -9 1 4 -1 -5 -5 -6 -7 -9 -9 -9 -9 -7 2 17 32 38 35 24 -8 -8 -1 2 -4 -7 -8 -9 -10 -10 -9 -6 6 29 40 42 37 6 -9 2 19 13 7 11 18 24 30 43 50 52 53 53 52 53 50 46 48 50 51 52 52 52 35 -9 19 56 58 56 60 55 50 52 46 45 45 49 46 47 47 33 -9 -1 46 49 47 51 53 50 49 52 50 44 49 48 49 53 52 48 51 1 -9 27 55 50 53 58 52 49 53 47 43 47 49 47]
[-4 -3 -3 -2 2 8 13 14 12 7 1 -5 -7 -8 -7 -2 13 30 36 36 22 -10 -7 14 22 8 14 33 51 54 53 54 52 51 53 49 48 50 51 50 55 54 52 41 -9 41 51 49 46 54 55 56 64 62 60 54 55 57 58 52 53 52 35 -8 50 53 49 48 54 52 52 52 46 48 54 51 55 53 52 -9 20 51 47 46 54 59 56 61 64 63 65 65 64 65 65 63 62 62 62 62 61 60 59 59 53 51 50 50 49 51 -6 -4 54 49 48 48 54 54 51 53 50 53 56 54 33 -9 50 52 49 48 52 52 58 63 65 63 64 59 58 53 40 53 62 57 55 52 49]
[-6 -6 -4 0 6 12 16 15 9 3 -4 -9 -9 -9 -9 -2 15 33 44 46 40 -8 -5 60 57 58 54 56 55 54 53 48 49 48 49 52 52 54 27 -9 -4 12 25 22 28 46 52 50 49 49 48 48 51 51 55 58 57 54 54 51 50 22 -9 53 56 51 49 54 49 46 51 51 51 52 52 51 57 49 -8 22 53 45 50 55 50 47 49 52 52 53 59 57 58 55 49 49 36 -9 37 61 56 56 54 62 59 56 53 53 54 49 50 53 54 55 60 54 -9 -9 -9 -9 -8 -8 -8 -8 -7 -7 -1 10 27 41 36 1 -7 3 52 27 21 75 68 65 62 67 66 65 69 67 62]
[2 2 2 2 1 3 5 6 8 9 8 5 1 -4 -6 -6 -5 2 15 29 38 39 26 -7 -10 31 53 35 18 25 57 60 53 54 54 49 51 54 52 49 48 49 52 51 53 49 50 3 -8 7 8 7 10 14 20 29 39 46 49 49 49 50 52 58 61 60 60 57 54 58 55 55 51 50 33 -8 56 57 53 51 57 51 52 53 49 48 51 54 53 54 -5 -5 25 22 7 19 52 52 46 49 51 48 47 51 50 54 58 56 57 58 53 50 51 4 -9 8 14 9 10 19 36 47 52 55 56 56 56 54 52 50 50 47 52 52 54 36 -9 -6 21 49 40 35 51 52 49 49 52]
}



kd_vals=[0, .1, .2, .4, .8, 1, 1.3, 1.5, 1.7, 2];
[~,n] = size(kd_vals);
figure; hold on;
CM = lines(n);

% plot1 = [1]
plot1 = [2:5];
[~,m] = size(plot1);
labels = cell(m,1);

for i=1:m
    idx = plot1(i);
    labels{i} = sprintf('kd = %.1f', kd_vals(idx));
    plot(data{idx},'color', CM(idx,:), 'linewidth', 1.5);
end

% plot([170,170], [-10,70], 'k--') % when the robot starts to turn
% plot([0,300], [0,0], 'k-')

title({'Error value from PD controller with kp = 1.3';'and varying K_d < 1 moving along a bend'})
xlabel('Time')
ylabel('Error from PD controller')
legend(labels, 'Location', 'northeast')
saveas(figure(1), 'kd_curve131.jpg'); % Saves as a jpg

% =================================================================
%   KP MORE THAN 1
% =================================================================
figure; hold on;

plot1 = [6:10];
[~,m] = size(plot1);
labels = cell(m,1);

for i=1:m
    idx = plot1(i);
    labels{i} = sprintf('kd = %.1f', kd_vals(idx));
    plot(data{idx}, 'color', CM(idx,:), 'linewidth', 1.5);
end

% plot([170,170], [-10,70], 'k--') % when the robot starts to turn
% plot([0,300], [0,0], 'k-')

title({'Error value from PD controller with kp = 1.3','and varying K_d >= 1 moving a bend'})
xlabel('Time')
ylabel('Error from PD controller')
legend(labels, 'Location', 'northeast')
saveas(figure(2), 'kd_curve132.jpg'); % Saves as a jpg
